---
- name: folder for selinux policy
  file:
    path: ~/openvpn-selinux
    state: directory

- name: distribute selinux policy
  copy:
    src: docker-openvpn.pp
    dest: ~/openvpn-selinux
  register: selinux_policy

- name: reload selinux policy
  command: semodule -i ~/openvpn-selinux/docker-openvpn.pp
  when: selinux_policy is changed

- name: create a network for openvpn container with custom subnet
  docker_network:
    name: '{{ openvpn_network_name }}'
    ipam_config:
      - subnet: '{{ openvpn_container_network_subnet }}'
        gateway: '{{ openvpn_container_network_gateway }}'
    state: present
  when:
    - openvpn_container_network_subnet != ''
    - openvpn_container_network_gateway != ''

- name: create a network for openvpn container
  docker_network:
    name: '{{ openvpn_network_name }}'
    state: present
  when: openvpn_container_network_subnet == '' or openvpn_container_network_gateway == ''

- name: check if openvpn container config exists
  command: docker volume inspect {{ openvpn_container_name }}-config
  ignore_errors: true
  register: openvpn_container_config_state

- block:
  - name: deploy custom dns
    include_role:
      name: docker-dnsmasq
    vars:
      dnsmasq_container_name: '{{ openvpn_container_name }}-dns'
      dnsmasq_network_name: '{{ openvpn_network_name }}'
      dnsmasq_options: '{{ custom_dns_options }}'

  - name: get custom dns ip address
    command: docker inspect --format {% raw %}'{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'{% endraw %} {{ openvpn_container_name }}-dns
    register: custom_dns_ip
  when: custom_dns

- block:
  - name: configure openvpn container
    docker_container:
      name: '{{ openvpn_container_name }}-conf'
      image: pschiffe/openvpn
      pull: '{{ container_pull }}'
      state: started
      network_mode: '{{ net_mode }}'
      networks_cli_compatible: true
      networks: '{{ nets }}'
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - '{{ openvpn_container_name }}-config:/etc/openvpn:z'
      detach: false
      command: ovpn_genconfig -C AES-256-CBC -a SHA384 {{ genconfig_options }} -u udp://{{ openvpn_container_url }}:{{ openvpn_container_port }} -s {{ vpn_subnet }} -n {{ custom_dns_ip.stdout if custom_dns else openvpn_container_dns }} {{ custom_vpn_options }}

  - name: configure keys for openvpn container
    docker_container:
      name: '{{ openvpn_container_name }}-conf'
      image: pschiffe/openvpn
      pull: '{{ container_pull }}'
      state: started
      network_mode: '{{ net_mode }}'
      networks_cli_compatible: true
      networks: '{{ nets }}'
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - '{{ openvpn_container_name }}-config:/etc/openvpn:z'
      detach: false
      env:
        EASYRSA_BATCH: '1'
        EASYRSA_PASSIN: 'pass:{{ openvpn_container_ca_key }}'
        EASYRSA_PASSOUT: 'pass:{{ openvpn_container_ca_key }}'
        EASYRSA_REQ_CN: '{{ openvpn_container_url }}'
      command: ovpn_initpki
  when: openvpn_container_config_state is failed

- name: remove openvpn configuration container
  docker_container:
    name: '{{ openvpn_container_name }}-conf'
    state: absent

- name: create main openvpn container
  docker_container:
    name: '{{ openvpn_container_name }}'
    image: pschiffe/openvpn
    pull: '{{ container_pull }}'
    state: started
    restart_policy: always
    capabilities:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    security_opts:
      - 'label:disable'
    network_mode: '{{ net_mode }}'
    networks_cli_compatible: true
    networks: '{{ nets }}'
    published_ports: '{{ [] if system_vpn else openvpn_container_port + ":1194/udp" }}'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - '{{ openvpn_container_name }}-config:/etc/openvpn:z'
